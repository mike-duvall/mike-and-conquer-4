

Next steps
***********
		* Make game end after killing NOD minigunner
			* Add Gamestates:
				X * Playing
				X	* Existing gameplay
				x * GameOver
			 x * Display "Mission Accomplished"
				s * Only allow press of ESC to exit at this time
			x * Don't animation minigunner in GaveOver state

		* Add generic error handling so that better error message is delivered if DirectX calls file, like in the case where a png file is missing
			X * Bad filename for png file
				X* 	Move DirectX error  to CPP file
				X*  Chop off first two stack frames in stack trace (this exception and the stacktrace class)
			(Not doing) * Bad filename for Shp file (it's two different scenarios)

		X * Shortend timeout on Rest calls into Game used by test
			(not doing) * Use non-deprecated way to set timeouts
		X * Make sure green background is drawing correclty

		X * Fix compiler warnings in Stacktrace.pp



Next Next steps
***************
	* Have computer randomly move NOD minigunner and attack
		* Do Mission Failed if NOD minigunner kills GDI
	

Backlog
********
********

	* Features
		* Make game end after killing NOD minigunner
			* Make game end after GDI minigunner is killed
		* Have computer randomly move NOD minigunner and attack
		* Add barracks for both sides
		* Make barracks able to generate minigunners
			* Add toolbar with minigunner on it
			* Build minigunner when clicked
		* Make computer controller continually spit out minigunners and have them attack

	* Refactoring

		* Group files in subclasses or packages or namespaces
			* Research current C++ standards for this
		* Revisit what claases snould handle mapping ShpFile to textures
		* Make Minigunner class not create new ShpFile instances every time.  Initialize ShpFile instances up front,
		  use same one over and over

		* Grouping ShpFile images into animation sequences
		* Other thoughts
			* GameSprite should have work with a single texture with all it's sprite images on it
			* GameSprite should not know about ShpFile.  The interface when instantiating GameSprite should
			just be the sprite sheet image from above
			* Create class that is responsible for parsing Shpfile into a single sprite sheet

		* See if animation sequences are coded in INI files in original C&C

	* Misc
		 * Consider if clicking an enemy unit that is out of range is:
			* One command (MoveToEnemeyAndAttack)
			vs
			* Two commands
				1.  MoveToEnemy
				2.  Attack
		* Consider if MoveToEnemy is a separate thing from MoveToLocation
		* MoveToLocation, the location never changes, but an enemy location could change
